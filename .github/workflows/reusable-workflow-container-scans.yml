name: Container image scan - Trivy
on:
  workflow_call:
    inputs:
      scan-type:
        description: The scan type you'd like to run. Options = fs or image
        required: true
        type: string
      registry:
        description: The container registry you use. Options = Dockerhub, github, artifactory, azure
        required: false
        type: string
        default: github
      image:
        description: The container image you wish to download you use. e.g. dfe-digital/get-into-teaching-frontend:release-build-sha-f7b65d6
        required: false
        type: string
        default: github
      create-sbom:
        description: Boolean, choose this if you wish to create an SBOM and upload it to artifacts
        required: false
        type: boolean
        default: false
      config-path:
        description: Path to trivy config file
        required: false
        type: string
    secrets:
      CR-USERNAME:
        description: Container registry username (if required)
        required: false
      CR-PASSWORD:
        description:  Container registry password (if required)
        required: false


jobs:
  test-visibility:

    name: Test repo visibility
    runs-on: ubuntu-latest

    outputs:
      visibility: ${{ steps.check-visibility.outputs.visibility }}

    steps:

      - name: Check repo visibility (GHAS currently not procured)
        id: check-visibility
        run: |
          status_code=$(curl -s -o /dev/null -w "%{http_code}" https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }})
          if [ $status_code -eq 200 ];
          then
            echo $status_code
            visibility=public
            echo "visibility=public" >> "$GITHUB_OUTPUT"
          else
            echo $status_code
            echo "visibility=private" >> "$GITHUB_OUTPUT"
            visibility=private
          fi

  trivy-private-repo-scan-sarif:
    name: Trivy container image scan (private repo) sarif output
    runs-on: ubuntu-latest

    needs: test-visibility

    permissions:
      actions: read
      contents: read
      pull-requests: read

    if: ${{ (github.actor != 'dependabot[bot]') && (needs.test-visibility.outputs.visibility == 'private') }}

    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
            scan-type: 'fs'
            format: 'sarif'
            output: 'trivy-results.sarif'
            severity: 'CRITICAL'


      - name: Name sarif outputs
        id: name-sarifs
        # Naming convention to create unique IDs to avoid clashes with matrices = 'JOBID_JOBNUMBER_trivy'. Additional _trivy to allow us to identify artifacts we want to review.
        run: |
            echo report_name=${{ github.run_id }}_${{ github.run_number }}_trivy >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:  
            name: ${{ steps.name-sarifs.outputs.report_name }}
            path: ${{ github.workspace }}/trivy-results.sarif
        # Quotas being met
        continue-on-error: true

  trivy-repo-scan-txt:
    name: Trivy container image scan txt output
    runs-on: ubuntu-latest

    needs: test-visibility

    permissions:
      actions: read
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          output: 'trivy.txt'
          severity: 'CRITICAL'

      - name: Publish Trivy Output to Summary
        run: |
          if [[ -s trivy.txt ]]; then
              {
                echo "### Security Output"
                echo "<details><summary>Click to expand</summary>"
                echo ""
                echo '```'
                cat trivy.txt
                echo '```'
                echo "</details>"
              } >> $GITHUB_STEP_SUMMARY
          fi

  trivy-public-repo-scan:
    name: Trivy container image scan (public repo) 
    runs-on: ubuntu-latest

    needs: test-visibility

    permissions:
      actions: read
      contents: read
      pull-requests: read

    if: ${{ (github.actor != 'dependabot[bot]') && (needs.test-visibility.outputs.visibility == 'public') }}

    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
            scan-type: 'fs'
            format: 'sarif'
            output: 'trivy-results.sarif'
            severity: 'CRITICAL'


      - name: Name sarif outputs
        id: name-sarifs
        # Naming convention to create unique IDs to avoid clashes with matrices = 'JOBID_JOBNUMBER_trivy'. Additional _trivy to allow us to identify artifacts we want to review.
        run: |
            echo report_name=${{ github.run_id }}_${{ github.run_number }}_trivy >> "$GITHUB_OUTPUT"

            
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'





